<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product"><!-- 음...daoimpl에서 찾는거겠죠 -->
<sql id="search">
	<where>
		<if test="search==1">
			code=#{keyword}
		</if>
		<if test="search==2">
			name LIKE CONCAT(CONCAT('%',#{keyword}),'%')
		</if>
		<if test="search==3">
			spec LIKE CONCAT(CONCAT('%',#{keyword}),'%')
		</if>
		<if test="search==4">
			category LIKE CONCAT(CONCAT('%',#{keyword}),'%')
		</if>
		<if test="search==5">
			manufacture LIKE CONCAT(CONCAT('%',#{keyword}),'%')
		</if>
	</where>
</sql>

	<select id="total" resultType="Integer"><!--당연히 id가 함수 네임 같은느낌 sql 문에서는 id를 함수 명으로 쓰구나-->
		SELECT COUNT(*) FROM product
	</select>

	<select id="list" resultType="Product">
		SELECT * FROM product  
		<include refid="search"></include><!-- 이건 반복문 용임 위에 sql 안에 적어두고 where 이런식으로 적어놓은 방식이면 간단히 사용가능함! -->
		LIMIT #{offset},#{perPage}<!-- page객체에서 두개를 챙겨옴 ㅇㅇ얘가 해주네 -->
	</select>
	

	<select id="item" resultType="Product">
		SELECT * FROM product
		WHERE code=#{code}
	</select>
	
	<insert id="add">
	INSERT INTO product VALUES(NULL, #{name},#{spec},#{category},#{manufacture},#{price})
	</insert>

	<update id="update">
		UPDATE product
		SET name=#{name}, spec=#{spec},category=#{category},manufacture=#{manufacture}, price=#{price}
		WHERE code=#{code}
	</update>

	<delete id="delete">
		DELETE FROM product
		WHERE code=#{code}
	</delete>
</mapper>

